#!/usr/bin/env python

#----------------------------------------------------------------------------
#"THE BEER-WARE LICENSE" (Revision 42):
#<phk@FreeBSD.ORG> wrote this file.  As long as you retain this notice you
#can do whatever you want with this stuff. If we meet some day, and you think
#this stuff is worth it, you can buy me a beer in return.   okmanek
#----------------------------------------------------------------------------

#https://github.com/okmanek/myNotes

############ imports ############
from sys import argv
import os
import subprocess

#arguments:
#>note
#['/home/i/code/github-okmanek/myNotes/note.py', 'book']

############ variables ############
argc = len(argv)
EDITOR = os.environ.get('EDITOR', 'vim')
if EDITOR == '':
  EDITOR = 'vim'
searchResultNeighbours = 1#how many surrounding lines is shown while searching
opers = [ '+', '/', '?' ]#available operators
fileName = 'note.txt'
filePath = '/home/i/.myNotes/' + fileName

############ functions ############
#http://stackoverflow.com/questions/5914627/prepend-line-to-beginning-of-a-file
def prependLine(filename, line):
  with open(filename, 'r+') as f:
    content = f.read()
    f.seek(0, 0)
    f.write(line.rstrip('\r\n') + '\n' + content)

#not used for now, maybe to delete?
def showContent():
  file = open(filePath, 'r')#TODO: why no with?
  fileContent = file.read()
  print fileContent
  file.close()

print(argc)

############ code itself ############
#> note
if( argc == 1 ):#open in text editor (vim if no editor is found)
  os.system('{0} {1}'.format(EDITOR, filePath))
else:
  if(argc == 2):#>note arg1
    if argv[1] in opers:#>note +
      print 'blad, podales operator bez zadnych danych'
      #so you cannot note for example plus sign. I doubt it is a problem though
    else:#note dupa
      prependLine(filePath, "")
      prependLine(filePath, argv[1])#file opened twice. TODO: fix it
      print 'added text: ' + argv[1]
  else:#>note arg1 arg2 (...)

    if argv[1] in opers:#>note + "text to process"
      if argv[1] == '+':
        textToSave = " ".join(argv[2:])
        prependLine(filePath, "")
        prependLine(filePath, textToSave)#file opened twice. TODO: fix it
        print 'text added: ' + textToSave

      elif argv[1] == '/' or argv[1] == '?':
        print('found text and {0} surrounding lines:'.format(searchResultNeighbours)
        cmd = "grep -C " + str(searchResultNeighbours) + " -n " + argv[2] + " " + filePath
        process = subprocess.Popen(cmd.split(), stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        stdout, stderr = process.communicate()
        print stdout

    else:#>note dupa1 dupa2 dupa3
      textToSave = " ".join(argv[1:])
      prependLine(filePath, "")
      prependLine(filePath, textToSave)#file opened twice. TODO: fix it
      print 'added text: ' + textToSave
      #save to file argv[2:] (i think so)
